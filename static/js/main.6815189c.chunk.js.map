{"version":3,"sources":["Components/MainPage/svg.js","Components/MainPage/Form.js","Components/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["MyReactComponent","this","createBarChart","props","animateFauxDOM","url","d3","selectAll","remove","s","svg","insert","attr","append","concat","line","curve","rnd","apply","pts","map","i","pts1","p","pts2","reverse","d","Math","random","curvy","react_default","a","createElement","React","Component","withFauxDOM","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","event","refs","someName","formValue","preventDefault","setState","target","alert","Fragment","onSubmit","getAlbums","className","style","marginBottom","htmlFor","type","placeholder","onChange","onClick","handleInput","ref","name","id","MainPage","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","albumName","req","res","wrap","_context","prev","next","elements","value","fetch","sent","json","setActiveAlbum","topalbums","album","stop","_x","arguments","imageRef","useRef","svgRef","MyReactComponent2","createRef","_useState","useState","_useState2","slicedToArray","toptext","setTopText","_useState3","_useState4","bottomtext","setBottomText","_useState5","_useState6","isTopDragging","setIsTopDragging","_useState7","_useState8","isBottomDragging","setIsBottomDragging","_useState9","_useState10","topY","setTopY","_useState11","_useState12","topX","setTopX","_useState13","_useState14","bottomX","setBottomX","_useState15","_useState16","bottomY","setBottomY","_useState17","_useState18","fontSizefront","setFontSizefront","_useState19","_useState20","fontSizeback","setFontSizeback","_useState21","_useState22","activeAlbum","_useState23","_useState24","dataUrl","setDataUrl","_useState25","_useState26","modalIsOpen","setModalIsOpen","_useState27","_useState28","currentImagebase64","setcurrentImagebase64","useEffect","openImage","JSON","stringify","index","length","image","base_image","Image","setAttribute","src","onload","getBase64Image","getStateObj","rect","current","getBoundingClientRect","xOffset","clientX","left","yOffset","clientY","top","handleMouseDown","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","img","canvas","width","height","getContext","drawImage","toDataURL","crossOrigin","textStyle","fontFamily","fill","userSelect","zIndex","fontWeight","reactstrap_es","href","rel","MainPage_Form","xmlns","xmlnsXlink","viewBox","x","y","MainPage_svg","xlinkHref","preserveAspectRatio","objectSpread","fontSize","dominantBaseline","textAnchor","onMouseDown","onMouseUp","for","moveToBack","currentTarget","text","svgData","XMLSerializer","serializeToString","ctx","svgSize","svgDoc","DOMParser","parseFromString","then","resp","innerHTML","head","appendChild","styleSheet","sheet","fontRules","fontProms","_loop","fR","rule","getPropertyValue","cssText","match","split","replace","FontRule","cssRules","push","blob","Promise","resolve","f","FileReader","result","readAsDataURL","dataURL","removeChild","all","svgNS","defs","createElementNS","join","documentElement","str","uri","encodeURIComponent","URL","revokeObjectURL","canvasdata","download","body","click","catch","reason","console","log","convertSvgToImage","key","cursor","alt","role","title","App","Components_MainPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8TAIMA,8LAMFC,KAAKC,iBACLD,KAAKE,MAAMC,eAAe,6IAiB1B,SAAeC,GAEbC,IAAa,YAAYC,UAAU,SAASC,SAE5C,IAAIC,EAAI,IAKJC,EAAMJ,IACG,YACVK,OAAO,MAAO,iBACdC,KAAK,QAAS,QACdC,OAAO,OACPD,KAAK,UALE,OAAAE,OAKgBL,EALhB,KAAAK,OAKqBL,IAG3BM,EAAOT,MAERU,MAAMV,KAGLW,EAAMX,IAAiBY,MAAM,EAhBrB,EAAE,GAAI,KAqBdC,EAAMb,KAAU,EAAGG,GAAcW,IAAI,SAAAC,GAAC,MAAI,CAtBnC,IAsBoCA,EAAUJ,OAIrDK,EAAOH,EAAIC,IAAI,SAACG,EAAGF,GAAJ,MAAU,CAC3BE,EAAE,GAAIA,EAAE,GAAKd,IAAUY,EAAIZ,EAAI,OAK7Be,EAAOL,EAAIM,UAAUL,IAAI,SAACG,EAAGF,GAAJ,MAAU,CACrCE,EAAE,GAAIA,EAAE,GAAKd,IAAUY,EAAIZ,EAAI,OAK7BiB,EAAIX,EAAKS,EAAKV,OAAOQ,IAIzBZ,EAAIG,OAAO,QACRD,KAAK,UAAW,IAChBA,KAAK,OAFR,OAAAE,OAEuC,IAAhBa,KAAKC,SAF5B,gBAGGhB,KAAK,IAHR,SAAAE,OAGsBL,EAHtB,MAAAK,OAG4BL,EAH5B,MAAAK,QAGmCL,EAHnC,OAAAK,OAG0CY,IApD5CG,oCAyDA,OACEC,EAAAC,EAAAC,cAAA,mBAhFyBC,IAAMC,WAyFtBC,wBAAYnC,UC7CZoC,cA5Cb,SAAAA,EAAYjC,GAAO,IAAAkC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArC,KAAAmC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAArC,KAAAqC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAzC,KAAME,KACDwC,aAAeN,EAAKM,aAAaC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAKS,aAAeT,EAAKS,aAAaF,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHHA,2EAMPU,GACV9C,KAAK+C,KAAKC,SAASC,UAAY,GAC/BH,EAAMI,sDAIKJ,GAEX9C,KAAKmD,SAAS,CAAEF,UAAWH,EAAMM,OAAOH,iDAG7BH,GACXO,MAAMrD,KAAKE,MAAM+C,WACjBH,EAAMI,kDAKN,OACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACEzB,EAAAC,EAAAC,cAAA,QAAMwB,SAAUvD,KAAKE,MAAMsD,UAAWC,UAAU,aAAaC,MAAO,CAAEC,aAAc,SAClF9B,EAAAC,EAAAC,cAAA,SAAO6B,QAAQ,eAAeH,UAAU,QAAxC,sBACA5B,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,oBAAoBI,KAAK,OACxCC,YAAa9D,KAAKE,MAAM+C,UACxBc,SAAU/D,KAAK0C,aACfsB,QAAShE,KAAKiE,YAAYtB,KAAK3C,MAC/BkE,IAAI,WACJC,KAAK,YACLC,GAAG,0BApCIpC,IAAMC,WCsZVoC,MAnZf,SAAkBnE,GAGhB,IAAMsD,EAAS,eAAAc,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,EAAA1C,EAAA2C,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZN,EAAY,GACZD,IACFA,EAAEzB,iBACF0B,EAAYD,EAAEvB,OAAO+B,SAASP,UAAUQ,OAJ1BJ,EAAAE,KAAA,EAOEG,MAAK,wEAAAxE,OAAyE+D,GAAwB3B,GAAjG,mEAPP,cAOV4B,EAPUG,EAAAM,KAAAN,EAAAE,KAAA,EAQEL,EAAIU,OARN,OAQVT,EARUE,EAAAM,KAShBE,GAAeV,EAAIW,UAAUC,OATb,wBAAAV,EAAAW,SAAAjB,MAAH,gBAAAkB,GAAA,OAAAtB,EAAArD,MAAAjB,KAAA6F,YAAA,GAWTC,EAAWC,mBACXC,EAASD,mBACTE,EAAoBC,sBAhBHC,EAiBOC,mBAAS,SAjBhBC,EAAAhE,OAAAiE,EAAA,EAAAjE,CAAA8D,EAAA,GAiBhBI,EAjBgBF,EAAA,GAiBPG,EAjBOH,EAAA,GAAAI,EAkBaL,mBAAS,aAlBtBM,EAAArE,OAAAiE,EAAA,EAAAjE,CAAAoE,EAAA,GAkBhBE,EAlBgBD,EAAA,GAkBJE,EAlBIF,EAAA,GAAAG,EAmBmBT,oBAAS,GAnB5BU,EAAAzE,OAAAiE,EAAA,EAAAjE,CAAAwE,EAAA,GAmBhBE,EAnBgBD,EAAA,GAmBDE,EAnBCF,EAAA,GAAAG,EAoByBb,oBAAS,GApBlCc,EAAA7E,OAAAiE,EAAA,EAAAjE,CAAA4E,EAAA,GAoBhBE,EApBgBD,EAAA,GAoBEE,EApBFF,EAAA,GAAAG,EAqBCjB,mBAAS,OArBVkB,EAAAjF,OAAAiE,EAAA,EAAAjE,CAAAgF,EAAA,GAqBhBE,EArBgBD,EAAA,GAqBVE,EArBUF,EAAA,GAAAG,EAsBCrB,mBAAS,OAtBVsB,EAAArF,OAAAiE,EAAA,EAAAjE,CAAAoF,EAAA,GAsBhBE,EAtBgBD,EAAA,GAsBVE,EAtBUF,EAAA,GAAAG,EAuBOzB,mBAAS,OAvBhB0B,EAAAzF,OAAAiE,EAAA,EAAAjE,CAAAwF,EAAA,GAuBhBE,EAvBgBD,EAAA,GAuBPE,EAvBOF,EAAA,GAAAG,EAwBO7B,mBAAS,OAxBhB8B,EAAA7F,OAAAiE,EAAA,EAAAjE,CAAA4F,EAAA,GAwBhBE,EAxBgBD,EAAA,GAwBPE,EAxBOF,EAAA,GAAAG,EAyBmBjC,mBAAS,IAzB5BkC,EAAAjG,OAAAiE,EAAA,EAAAjE,CAAAgG,EAAA,GAyBhBE,EAzBgBD,EAAA,GAyBDE,EAzBCF,EAAA,GAAAG,EA0BiBrC,mBAAS,IA1B1BsC,EAAArG,OAAAiE,EAAA,EAAAjE,CAAAoG,EAAA,GA0BhBE,EA1BgBD,EAAA,GA0BFE,EA1BEF,EAAA,GAAAG,GA2BezC,mBAAS,IA3BxB0C,GAAAzG,OAAAiE,EAAA,EAAAjE,CAAAwG,GAAA,GA2BhBE,GA3BgBD,GAAA,GA2BHtD,GA3BGsD,GAAA,GAAAE,GA4BO5C,mBAAS,IA5BhB6C,GAAA5G,OAAAiE,EAAA,EAAAjE,CAAA2G,GAAA,GA4BhBE,GA5BgBD,GAAA,GA4BPE,GA5BOF,GAAA,GAAAG,GA6BehD,oBAAS,GA7BxBiD,GAAAhH,OAAAiE,EAAA,EAAAjE,CAAA+G,GAAA,GA6BhBE,GA7BgBD,GAAA,GA6BHE,GA7BGF,GAAA,GAAAG,GA8B6BpD,mBAAS,MA9BtCqD,GAAApH,OAAAiE,EAAA,EAAAjE,CAAAmH,GAAA,GA8BhBE,GA9BgBD,GAAA,GA8BIE,GA9BJF,GAAA,GA+BjBxG,GAAY,QAElB2G,oBAAU,WACRpG,EAAU,OAET,IAEHoG,oBAAU,WACRD,GAAsBT,KACrB,CAACA,KAELU,oBAAU,WACPC,GAAU,IACV,CAACC,KAAKC,UAAUhB,MAOlB,IAuBMc,GAAY,SAACG,GACjB,GAAGjB,IAAeA,GAAYkB,OAAO,CACnC,IAAMC,EAAQnB,GAAYiB,GACpBG,EAAa,IAAIC,MACvBD,EAAWE,aAAa,cAAe,aACvCF,EAAWG,IAAMJ,EAAMA,MAAM,GAAG,SAEhCC,EAAWI,OAAS,WAClBpB,GAAWqB,GAAeL,KAE5BZ,IAAgBD,MAadmB,GAAc,SAAC9F,EAAGd,GACtB,IAAI6G,EAAO5E,EAAS6E,QAAQC,wBACtBC,EAAUlG,EAAEmG,QAAUJ,EAAKK,KAAO,GAClCC,EAAUrG,EAAEsG,QAAUP,EAAKQ,IAAM,GAC1B,WAATrH,GACFuD,GAAoB,GACpBJ,GAAiB,GACjBgB,EAAU,GAAAnH,OAAIgK,EAAJ,OACVzC,EAAU,GAAAvH,OAAImK,EAAJ,QACQ,QAATnH,IACTuD,GAAoB,GACpBJ,GAAiB,GACjBY,EAAO,GAAA/G,OAAIgK,EAAJ,OACPrD,EAAO,GAAA3G,OAAImK,EAAJ,SAKLG,GAAkB,SAACxG,EAAGd,GAC1B4G,GAAY9F,EAAGd,GACfuH,SAASC,iBAAiB,YAAa,SAACvI,GAAD,OAAWwI,GAAgBxI,EAAOe,MAGrEyH,GAAkB,SAAC3G,EAAGd,IACtBkD,GAAiBI,KAEN,WAATtD,GAAqBsD,EACvBsD,GAAY9F,EAAGd,GACG,QAATA,GAAkBkD,GAC3B0D,GAAY9F,EAAGd,KAKf0H,GAAgB,SAACzI,GACrBsI,SAASI,oBAAoB,YAAaF,IAC1CtE,GAAiB,GACjBI,GAAoB,IAkGhBoD,GAAiB,SAACiB,GACtB,IAAIC,EAASN,SAASrJ,cAAc,UAQpC,OAPA2J,EAAOrB,aAAa,cAAe,aACnCoB,EAAIpB,aAAa,cAAe,aAChCqB,EAAOC,MAAQF,EAAIE,MACnBD,EAAOE,OAASH,EAAIG,OACVF,EAAOG,WAAW,MACxBC,UAAUL,EAAK,EAAG,GACRC,EAAOK,UAAU,eAK3B7B,GAAQnB,GACRoB,GAAa,IAAIC,MACvBD,GAAW6B,YAAc,YACzB7B,GAAWG,IAAMJ,GACjBC,GAAWE,aAAa,cAAe,aACvC,IAGI4B,GAAY,CACdC,WAAY,YACZC,KAAM,OACNC,WAAY,OACZC,OAAQ,WACRC,WAAY,KAId,OACEzK,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAM0B,UAAU,gBACd5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,8BACb5B,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAaC,KAAK,KAAlB,YACA3K,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,uBAAb,sDAIA5B,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,uBACX5B,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,SAASL,OAAO,SAASqJ,IAAI,sBAAsBD,KAAM,uBAAtE,yBAEF3K,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,2BACb5B,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,eAAegJ,IAAI,sBAAsBrJ,OAAO,SAASoJ,KAAM,eAA5E,cADb,mBAOJ3K,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,gCACb5B,EAAAC,EAAAC,cAAC2K,EAAD,CACElJ,UAAWA,EAAUb,KAAK3C,MAC1BiD,UAAWA,KAGbpB,EAAAC,EAAAC,cAAA,MAAI0B,UAAU,QAAd,2BAIA5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,aACb5B,EAAAC,EAAAC,cAAA,OACE4J,MA7CC,OA8CDvH,GAAG,UACHF,IAAK8B,EACL2G,MAAM,6BACNC,WAAW,+BACXnJ,UAAU,gBACVoJ,QAAQ,eAGRhL,EAAAC,EAAAC,cAAA,iBAAe+K,EAAG,EAAGC,EAAG,EAAGpB,MAtD1B,OAsD2CC,OArD1C,QAsDA/J,EAAAC,EAAAC,cAACiL,EAAD,CAAkB9I,IAAK+B,KAGzBpE,EAAAC,EAAAC,cAAA,SACEiK,YAAY,YACZ9H,IAAK4B,EACLmH,UAAWvD,GACXkC,OA7DA,OA8DAD,MA/DD,OAgECuB,oBAAoB,iBACpBzJ,UAAU,kBAGZ5B,EAAAC,EAAAC,cAAA,QACE2B,MAAKrB,OAAA8K,EAAA,EAAA9K,CAAA,GAAO4J,GAAP,CAAkBI,OAAQtF,EAAgB,EAAI,EAAGqG,SAAU7E,EAAgB,OAChFuE,EAAGnF,EACHoF,EAAGxF,EACH8F,iBAAiB,SACjBC,WAAW,SACXC,YAAa,SAAAzK,GAAK,OAAIqI,GAAgBrI,EAAO,QAC7C0K,UAAW,SAAA1K,GAAK,OAAIyI,OAGnBhF,GAEH1E,EAAAC,EAAAC,cAAA,QACE2B,MAAKrB,OAAA8K,EAAA,EAAA9K,CAAA,GAAO4J,GAAP,CAAkBmB,SAAUzE,EAAe,OAChD0E,iBAAiB,SACjBC,WAAW,SACXR,EAAG/E,EACHgF,EAAG5E,EACHoF,YAAa,SAAAzK,GAAK,OAAIqI,GAAgBrI,EAAO,WAC7C0K,UAAW,SAAA1K,GAAK,OAAIyI,OAGnB5E,IAIL9E,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,qBACb5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,WACb5B,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KACE1K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAO9I,UAAU,UAAUgK,IAAI,WAA/B,sBACA5L,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QArSxC,SAACW,GACtB6D,EAAmBD,EAAgB,KAoSnB,KACA1G,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,eAAeI,KAAK,OAAOM,KAAK,UAAUC,GAAG,UAAUJ,QAAS9D,EAAMwN,WAAY5J,YAAY,cAAcC,SApQzH,SAACjB,GACpB0D,EAAW1D,EAAM6K,cAAcvI,UAoQhBvD,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QA3SxC,SAACW,GACtB6D,EAAkBD,EAAgB,KA0SlB,OAGJ1G,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KACE1K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOkB,IAAI,cAAX,uBACA5L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QArSpC,SAACW,GACzBiE,EAAiBD,EAAe,KAoSjB,KACA9G,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,eAAeI,KAAK,OAAOM,KAAK,aAAaC,GAAG,aAAaJ,QAAS9D,EAAMwN,WAAY5J,YAAY,aAAaC,SAxQ3H,SAACjB,GACxB8D,EAAc9D,EAAM6K,cAAcvI,UAwQlBvD,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QA3SpC,SAACW,GACzBiE,EAAiBD,EAAe,KA0SjB,OAKJ9G,EAAAC,EAAAC,cAAA,UAAQiC,QAAS,kBAjOL,SAAC4J,GAEzB,IAmDMnN,EAAMuF,EAAO2E,QACfkD,GAAU,IAAIC,eAAgBC,kBAAkBtN,GAC9CiL,EAASN,SAASrJ,cAAc,UACtC2J,EAAOrB,aAAa,KAAM,UAC1B,IAAM2D,EAAMtC,EAAOG,WAAW,MAExBoC,EAAUxN,EAAImK,wBACpBc,EAAOC,MAAQsC,EAAQtC,MACvBD,EAAOE,OAASqC,EAAQrC,OACxB,IA5DwBxL,EA4DlBqL,EAAML,SAASrJ,cAAc,OAE/BmM,GAAS,IAAIC,WAAYC,gBAAgBP,EAAS,kBA9D9BzN,EA+DT,sDA9DNiF,MAAMjF,GACViO,KAAK,SAAAC,GAAI,OAAIA,EAAKV,SAClBS,KAAK,SAAAT,GACJ,IAAIpN,EAAI4K,SAASrJ,cAAc,SAC/BvB,EAAE+N,UAAYX,EACdxC,SAASoD,KAAKC,YAAYjO,GAgB1B,IAfA,IAAIkO,EAAalO,EAAEmO,MAYfC,EAAY,GACdC,EAAY,GAjBFC,EAAA,SAmBH1N,GACP,IACI2N,EAfS,SAAAC,GACb,IAAI1E,EAAM0E,EAAKtL,MAAMuL,iBAAiB,QAAUD,EAAKtL,MAAMwL,QAAQC,MAAM,eAAe,GACxF,IAAK7E,EAAK,OAAO,KACjB,IAAIlK,EAAMkK,EAAI8E,MAAM,QAAQ,GAAGA,MAAM,KAAK,GAC1C,MAAO,CACLJ,KAAMA,EACN1E,IAAKA,EACLlK,IAAKA,EAAIiP,QAAQ,KAAM,KAQhBC,CADDZ,EAAWa,SAASnO,IAE5B,IAAK2N,EACH,iBAEFH,EAAUY,KAAKT,GACfF,EAAUW,KACRnK,MAAM0J,EAAG3O,KACNiO,KAAK,SAAAC,GAAI,OAAIA,EAAKmB,SAClBpB,KAAK,SAAAoB,GACJ,OAAO,IAAIC,QAAQ,SAAAC,GAEjB,IAAIC,EAAI,IAAIC,WACZD,EAAErF,OAAS,SAAA5F,GAAC,OAAIgL,EAAQC,EAAEE,SAC1BF,EAAEG,cAAcN,OAGnBpB,KAAK,SAAA2B,GAEJ,OAAOjB,EAAGC,KAAKE,QAAQG,QAAQN,EAAG3O,IAAK4P,OApBtC5O,EAAI,EAAGA,EAAIsN,EAAWa,SAAStF,OAAQ7I,IAAK0N,EAA5C1N,GAyBT,OADAgK,SAASoD,KAAKyB,YAAYzP,GACnBkP,QAAQQ,IAAIrB,MAiBtBR,KAAK,SAAAkB,GACJ,IAAIY,EAAQ,6BACRC,EAAOlC,EAAOmC,gBAAgBF,EAAO,QACrCzM,EAAQwK,EAAOmC,gBAAgBF,EAAO,SAC1CzM,EAAM6K,UAAYgB,EAASe,KAAK,MAChCF,EAAK3B,YAAY/K,GACjBwK,EAAOqC,gBAAgB9B,YAAY2B,GACnC,IAAII,GAAM,IAAI1C,eAAgBC,kBAAkBG,EAAOqC,iBACnDE,EAAM,mCAAqCC,mBAAmBF,GAElE/E,EAAIlB,OAAS,SAAU5F,GACrBgM,IAAIC,gBAAgB5Q,KAAKsK,KACzB0D,EAAIlC,UAAU9L,KAAM,EAAG,GACvB0L,EAAOG,WAAW,MAAMC,UAAUL,EAAK,EAAG,GAC1C,IAAMoF,EAAanF,EAAOK,UAAU,cAC9BjK,EAAIsJ,SAASrJ,cAAc,KACjCD,EAAEgP,SAAF,GAAAjQ,OAAgB+M,EAAhB,QACA9L,EAAE0K,KAAOqE,EACTzF,SAAS2F,KAAKtC,YAAY3M,GAC1BA,EAAEkP,SAEJvF,EAAInB,IAAMmG,EACVhF,EAAIpB,aAAa,cAAe,eAGjC4G,MAAM,SAAAC,GAAM,OAAIC,QAAQC,IAAIF,KAsIIG,CAAiB,GAAAxQ,OAAI0F,EAAJ,KAAA1F,OAAe8F,KAAelD,UAAU,8BAAhF,4BAMN5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,WACZsF,IAAeA,GAAY5H,IAAI,SAAC+I,EAAOF,GAAR,OAC9BnI,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,eAAeO,aA9SrCiC,EAAkB0E,SACnB1E,EAAkB0E,QAAQ1K,kBA6SuCqR,IAAG,GAAAzQ,OAAKmJ,IAEvC,IAAvBjB,GAAYkB,QACXpI,EAAAC,EAAAC,cAAA,OACE2B,MAAO,CACLiI,MAAO,OACP4F,OAAQ,UACR3F,OAAQ,QAEVI,YAAY,YACZwF,IAAKtH,EAAM/F,KACXmG,IAAKJ,EAAMA,MAAM,GAAG,SACpBzG,UAAU,qBACVO,QAAS,kBAAM6F,GAAUG,IACzByH,KAAK,eACLH,IAAKtH,EACL0H,MAAOxH,EAAM/F,eCxXlBwN,gMARX,OACE9P,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACEzB,EAAAC,EAAAC,cAAC6P,EAAD,cAJU3P,cCME4P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7C,MACvB,2DCZN8C,IAASC,OAAOrQ,EAAAC,EAAAC,cAACoQ,EAAD,MAAS/G,SAASgH,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.6815189c.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport { withFauxDOM } from 'react-faux-dom';\n\nclass MyReactComponent extends React.Component {\n\n\n\n  componentDidMount() {\n    // this.props.onRef(this)\n    this.createBarChart();\n    this.props.animateFauxDOM(800);\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  componentWillUnmount() {\n    // this.props.onRef(undefined)\n  }\n\n\n\n  createBarChart() {\n\n    curvy()\n\n    function curvy(url) {\n\n      d3.selectAll(\"#svg_ref\").selectAll(\".land\").remove();\n\n      let s = 500;            // size\n      let step = 100;         // x-axis step\n      let range = [-50, 50];  // y-axis range\n\n      // add new svg to document.body with origin at 0  \n      let svg = d3\n        .selectAll('#svg_ref')\n        .insert('svg', '.coverfit + *')\n        .attr(\"class\", \"land\")\n        .append('svg')\n        .attr('viewBox', `0 0 ${s} ${s}`);\n\n      // interpolation algorithm for points used to form masking shape\n      let line = d3\n        .line()\n        .curve(d3.curveCardinalClosed);\n\n      // random values generator function\n      let rnd = d3.randomUniform.apply(0, range);\n\n      // here i place points with fixed `step` by `x` axis  \n      // and random value in `range` by `y` axis\n      // which forms the \"original path\"\n      let pts = d3.range(-1, s / step + 2).map(i => [i * step, rnd()]);\n\n      // shift points down from \"original path\", \n      // amount of shift depends from point index \n      let pts1 = pts.map((p, i) => [\n        p[0], p[1] + s * 0.3 - i * s * 0.08\n      ]);\n\n      // reverse order of original and shift points down on \n      // bigger values, depending from point index\n      let pts2 = pts.reverse().map((p, i) => [\n        p[0], p[1] + s * 0.8 - i * s * 0.03\n      ]);\n\n      // forming single interpolated path for all \n      // points from prev steps concatenated in single array\n      let d = line(pts2.concat(pts1));\n\n      // append rect sized as viewport with hole formed by interpolated path\n      // with random color from hsl palette and opacity 0.9\n      svg.append('path')\n        .attr('opacity', 0.9)\n        .attr('fill', `hsl(${Math.random() * 255}, 50%, 65%)`)\n        .attr('d', `M0,0 v${s} h${s} v${-s} z ${d}`)\n    }\n  }\n\n  render() {\n    return (\n      <div></div>\n    )\n  }\n}\n\n// MyReactComponent.defaultProps = {\n//   chart: 'loading'\n// }\n\nexport default withFauxDOM(MyReactComponent)","import React from 'react';\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.refs.someName.formValue = '';\n    event.preventDefault();\n  }\n\n\n  handleChange(event) {\n\n    this.setState({ formValue: event.target.formValue });\n  }\n\n  handleSubmit(event) {\n    alert(this.props.formValue);\n    event.preventDefault();\n  }\n\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.props.getAlbums} className=\"fixed-form\" style={{ marginBottom: \"2rem\" }}>\n          <label htmlFor=\"artistsearch\" className=\"ml-2\">Search your Artist</label>\n          <input className=\"form__input w-100\" type=\"text\"\n            placeholder={this.props.formValue}\n            onChange={this.handleChange}\n            onClick={this.handleInput.bind(this)}\n            ref=\"someName\"\n            name=\"albumName\"\n            id=\"artistsearch\"\n          />\n        </form>\n      </>\n    );\n  }\n\n}\n\n\nexport default Form;","import React, {useEffect, useState, useRef, createRef} from 'react';\nimport { FormGroup, Label, NavbarBrand } from 'reactstrap';\nimport MyReactComponent from './svg';\nimport Form from './Form';\n\nfunction MainPage(props) {\n\n\n  const getAlbums = async (e) => {\n    let albumName = \"\";\n    if (e) {\n      e.preventDefault();\n      albumName = e.target.elements.albumName.value\n    }\n\n    const req = await fetch(`https://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=${albumName ? albumName : formValue}&api_key=afcfad19fac36b2d66cf2f17e37f66ed&format=json&limit=20`);\n    const res = await req.json();\n    setActiveAlbum(res.topalbums.album);\n  }\n  const imageRef = useRef();\n  const svgRef = useRef();\n  const MyReactComponent2 = createRef();\n  const [toptext, setTopText] = useState(\"Queen\");\n  const [bottomtext, setBottomText] = useState(\"Best Hits\");\n  const [isTopDragging, setIsTopDragging] = useState(false);\n  const [isBottomDragging, setIsBottomDragging] = useState(false);\n  const [topY, setTopY] = useState(\"80%\");\n  const [topX, setTopX] = useState(\"50%\");\n  const [bottomX, setBottomX] = useState(\"50%\");\n  const [bottomY, setBottomY] = useState(\"90%\");\n  const [fontSizefront, setFontSizefront] = useState(38);\n  const [fontSizeback, setFontSizeback] = useState(38);\n  const [activeAlbum, setActiveAlbum] = useState([]);\n  const [dataUrl, setDataUrl] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentImagebase64, setcurrentImagebase64] = useState(null);\n  const formValue = \"Queen\";\n\n  useEffect(() => {\n    getAlbums(null);\n\n  }, []);\n\n  useEffect(() => {\n    setcurrentImagebase64(dataUrl);\n  }, [dataUrl]);\n\n useEffect(() => {\n    openImage(0)\n }, [JSON.stringify(activeAlbum)]);\n\n//  useEffect(() => {\n//   createBarChart();\n// }, [MyReactComponent2.current]);\n\n\n  const incrementScore = (e) => {\n    setFontSizefront( fontSizefront + 2 );\n  }\n\n  const decrementScore = (e) => {\n    setFontSizefront(  fontSizefront - 2 );\n  }\n\n  const incrementScoreback = (e) => {\n     setFontSizeback( fontSizeback + 2 );\n  }\n\n  const decrementScoreback = (e) => {\n     setFontSizeback( fontSizeback - 2 );\n  }\n\n\n  const createBarChart = () => {\n    if(MyReactComponent2.current){\n      MyReactComponent2.current.createBarChart();\n    }\n  }\n\n  const openImage = (index) => {\n    if(activeAlbum && activeAlbum.length){\n      const image = activeAlbum[index];\n      const base_image = new Image();\n      base_image.setAttribute('crossOrigin', 'anonymous');\n      base_image.src = image.image[3]['#text'];\n      \n      base_image.onload = function() {\n        setDataUrl(getBase64Image(base_image));\n      }\n      setModalIsOpen(!modalIsOpen);\n    }\n  }\n\n\n  const changeTopText = (event) => {\n     setTopText(event.currentTarget.value);\n  }\n\n  const changeBottomText = (event) => {\n    setBottomText(event.currentTarget.value);\n  }\n\n  const getStateObj = (e, type) => {\n    let rect = imageRef.current.getBoundingClientRect();\n    const xOffset = e.clientX - rect.left + 20;\n    const yOffset = e.clientY - rect.top + 40;\n    if (type === \"bottom\") {\n      setIsBottomDragging(true);\n      setIsTopDragging(false)\n      setBottomX(`${xOffset}px`)\n      setBottomY(`${yOffset}px`)\n    } else if (type === \"top\") {\n      setIsBottomDragging(false);\n      setIsTopDragging(true)\n      setTopX(`${xOffset}px`)\n      setTopY(`${yOffset}px`)\n    }\n  }\n\n\n  const handleMouseDown = (e, type) => {\n    getStateObj(e, type);\n    document.addEventListener('mousemove', (event) => handleMouseMove(event, type));\n  }\n\n  const handleMouseMove = (e, type) => {\n    if (isTopDragging || isBottomDragging) {\n      // let stateObj = {};\n      if (type === \"bottom\" && isBottomDragging) {\n        getStateObj(e, type);\n      } else if (type === \"top\" && isTopDragging) {\n        getStateObj(e, type);\n      }\n    }\n  };\n\n  const handleMouseUp = (event) => {\n    document.removeEventListener('mousemove', handleMouseMove);\n    setIsTopDragging(false);\n    setIsBottomDragging(false);\n  }\n\n\n  const convertSvgToImage = (text) => {\n\n    const GFontToDataURI = (url) => {\n      return fetch(url)\n        .then(resp => resp.text())\n        .then(text => {\n          let s = document.createElement('style');\n          s.innerHTML = text;\n          document.head.appendChild(s);\n          let styleSheet = s.sheet\n\n          let FontRule = rule => {\n            let src = rule.style.getPropertyValue('src') || rule.style.cssText.match(/url\\(.*?\\)/g)[0];\n            if (!src) return null;\n            let url = src.split('url(')[1].split(')')[0];\n            return {\n              rule: rule,\n              src: src,\n              url: url.replace(/\"/g, '')\n            };\n          };\n          let fontRules = [],\n            fontProms = [];\n\n          for (let i = 0; i < styleSheet.cssRules.length; i++) {\n            let r = styleSheet.cssRules[i];\n            let fR = FontRule(r);\n            if (!fR) {\n              continue;\n            }\n            fontRules.push(fR);\n            fontProms.push(\n              fetch(fR.url) // fetch the actual font-file (.woff)\n                .then(resp => resp.blob())\n                .then(blob => {\n                  return new Promise(resolve => {\n\n                    let f = new FileReader();\n                    f.onload = e => resolve(f.result);\n                    f.readAsDataURL(blob);\n                  })\n                })\n                .then(dataURL => {\n\n                  return fR.rule.cssText.replace(fR.url, dataURL);\n                })\n            )\n          }\n          document.head.removeChild(s); // clean up\n          return Promise.all(fontProms); // wait for all this has been done\n        });\n    }\n\n    const svg = svgRef.current;\n    let svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"id\", \"canvas\");\n    const ctx = canvas.getContext('2d');\n\n    const svgSize = svg.getBoundingClientRect();\n    canvas.width = svgSize.width;\n    canvas.height = svgSize.height;\n    const img = document.createElement(\"img\");\n\n    let svgDoc = new DOMParser().parseFromString(svgData, 'image/svg+xml');\n    GFontToDataURI('https://fonts.googleapis.com/css?family=Poppins:600')\n      .then(cssRules => { // we've got our array with all the cssRules\n        let svgNS = \"http://www.w3.org/2000/svg\";\n        let defs = svgDoc.createElementNS(svgNS, 'defs');\n        let style = svgDoc.createElementNS(svgNS, 'style');\n        style.innerHTML = cssRules.join('\\n');\n        defs.appendChild(style);\n        svgDoc.documentElement.appendChild(defs);\n        let str = new XMLSerializer().serializeToString(svgDoc.documentElement);\n        let uri = 'data:image/svg+xml;charset=utf8,' + encodeURIComponent(str);\n\n        img.onload = function (e) {\n          URL.revokeObjectURL(this.src);\n          ctx.drawImage(this, 0, 0);\n          canvas.getContext(\"2d\").drawImage(img, 0, 0);\n          const canvasdata = canvas.toDataURL(\"image/jpeg\");\n          const a = document.createElement(\"a\");\n          a.download = `${text}.jpg`;\n          a.href = canvasdata;\n          document.body.appendChild(a);\n          a.click();\n        }\n        img.src = uri;\n        img.setAttribute('crossOrigin', 'anonymous');\n\n      })\n      .catch(reason => console.log(reason))\n  }\n\n  const getBase64Image = (img) => {\n    var canvas = document.createElement(\"canvas\");\n    canvas.setAttribute('crossOrigin', 'anonymous');\n    img.setAttribute('crossOrigin', 'anonymous');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    var dataURL = canvas.toDataURL(\"image/jpeg\");\n    return dataURL;\n  }\n\n\n  const image = activeAlbum;\n  const base_image = new Image();\n  base_image.crossOrigin = \"anonymous\";  // This enables CORS\n  base_image.src = image;\n  base_image.setAttribute('crossOrigin', 'anonymous');\n  var newWidth = \"100%\";\n  var newHeight = \"100%\";\n\n  let textStyle = {\n    fontFamily: \"'Poppins'\",\n    fill: \"#FFF\",\n    userSelect: \"none\",\n    zIndex: '40000000',\n    fontWeight: 600\n  }\n\n\n  return (\n    <React.Fragment>\n      <div>\n        <div  className=\"main-content\">\n          <div className=\"sidebar d-flex flex-column\">\n            <NavbarBrand href=\"/\">Albumify</NavbarBrand>\n            <p className=\"text-center d-block\">\n              This is a fun project inspired by ReplaceCover.com\n            </p>\n\n            <p className=\"text-center d-block\">\n              <a className=\" mt-0 \" target=\"_blank\" rel=\"noopener noreferrer\" href={'mailto:hi@santih.me'} > Contact the creator</a>\n            </p>\n            <div className=\"row mt-auto text-center\">\n              <p>\n                Created by <a className=\" mt-0 white \" rel=\"noopener noreferrer\" target=\"_blank\" href={'//santih.me'} >santih.me </a> MIT Licensed\n              </p>\n            </div>\n\n          </div>\n\n          <div className=\"meme-gen-modal mx-auto w-100\" >\n            <Form\n              getAlbums={getAlbums.bind(this)}\n              formValue={formValue}\n            />\n\n            <h2 className=\"my-4\">\n              Choose an Album and Go!\n            </h2>\n\n            <div className=\"pedidosya\">\n              <svg\n                width={newWidth}\n                id=\"svg_ref\"\n                ref={svgRef}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                className=\"svg_container\"\n                viewBox=\"0 0 500 500\"\n              >\n\n                <foreignObject x={0} y={0} width={newWidth} height={newHeight} >\n                  <MyReactComponent ref={MyReactComponent2} />\n                </foreignObject>\n\n                <image\n                  crossOrigin=\"anonymous\"\n                  ref={imageRef}\n                  xlinkHref={currentImagebase64}\n                  height={newHeight}\n                  width={newWidth}\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  className=\"svg2 coverfit\"\n                />\n\n                <text\n                  style={{ ...textStyle, zIndex: isTopDragging ? 4 : 1, fontSize: fontSizefront + 'px' }}\n                  x={topX}\n                  y={topY}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  onMouseDown={event => handleMouseDown(event, 'top')}\n                  onMouseUp={event => handleMouseUp(event, 'top')}\n\n                >\n                  {toptext}\n                </text>\n                <text\n                  style={{ ...textStyle, fontSize: fontSizeback + 'px' }}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  x={bottomX}\n                  y={bottomY}\n                  onMouseDown={event => handleMouseDown(event, 'bottom')}\n                  onMouseUp={event => handleMouseUp(event, 'bottom')}\n\n                >\n                  {bottomtext}\n                </text>\n\n              </svg>\n              <div className=\"meme-form mx-auto\">\n                <div className=\"d-block\">\n                  <FormGroup>\n                    <Label className=\"d-block\" for=\"toptext\">First line of Text</Label>\n                    <button className=\"counter-action decrement\" onClick={decrementScore}>-</button>\n                    <input className=\"form-control\" type=\"text\" name=\"toptext\" id=\"toptext\" onClick={props.moveToBack} placeholder=\"Artist name\" onChange={changeTopText} />\n                    <button className=\"counter-action increment\" onClick={incrementScore}>+</button>\n                  </FormGroup>\n                </div>\n                <FormGroup>\n                  <Label for=\"bottomtext\">Second line of Text</Label>\n                  <div>\n                    <button className=\"counter-action decrement\" onClick={decrementScoreback}>-</button>\n                    <input className=\"form-control\" type=\"text\" name=\"bottomtext\" id=\"bottomtext\" onClick={props.moveToBack} placeholder=\"Album name\" onChange={changeBottomText} />\n                    <button className=\"counter-action increment\" onClick={incrementScoreback}>+</button>\n                  </div>\n\n\n                </FormGroup>\n                <button onClick={() => convertSvgToImage(`${toptext}-${bottomtext}`)} className=\"btn btn-success mt-3 w-100\">Download Album Cover!</button>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"content\">\n            {activeAlbum && activeAlbum.map((image, index) => (\n              <div className=\"image-holder\" onClick={createBarChart()} key={`${index}`}\n              >\n                {activeAlbum.length !== 0 &&\n                  <img\n                    style={{\n                      width: \"100%\",\n                      cursor: \"pointer\",\n                      height: \"100%\"\n                    }}\n                    crossOrigin=\"anonymous\"\n                    alt={image.name}\n                    src={image.image[3]['#text']}\n                    className=\"w-100 first-second\"\n                    onClick={() => openImage(index)}\n                    role=\"presentation\"\n                    key={index}\n                    title={image.name}\n                  />\n                }\n\n              </div>\n            ))}\n          </div>\n        </div>\n\n      </div>\n    </React.Fragment>\n\n  )\n\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport MainPage from './Components/MainPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <MainPage />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}