{"version":3,"sources":["Components/MainPage/svg.js","Components/MainPage/Form.js","Components/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["MyReactComponent","this","props","onRef","animateFauxDOM","createBarChart","undefined","url","d3","selectAll","remove","s","svg","insert","attr","append","concat","line","curve","rnd","apply","pts","map","i","pts1","p","pts2","reverse","d","Math","random","curvy","react_default","a","createElement","React","Component","withFauxDOM","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","event","refs","someName","formValue","preventDefault","setState","target","alert","Fragment","onSubmit","getAlbums","className","style","marginBottom","htmlFor","type","placeholder","onChange","onClick","handleInput","ref","name","id","MainPage","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","albumName","req","res","wrap","_context","prev","next","elements","value","fetch","sent","json","setActiveAlbum","topalbums","album","stop","_x","arguments","imageRef","useRef","svgRef","MyReactComponent2","_useState","useState","_useState2","slicedToArray","toptext","setTopText","_useState3","_useState4","bottomtext","setBottomText","_useState5","_useState6","isTopDragging","setIsTopDragging","_useState7","_useState8","isBottomDragging","setIsBottomDragging","_useState9","_useState10","topY","setTopY","_useState11","_useState12","topX","setTopX","_useState13","_useState14","bottomX","setBottomX","_useState15","_useState16","bottomY","setBottomY","_useState17","_useState18","fontSizefront","setFontSizefront","_useState19","_useState20","fontSizeback","setFontSizeback","_useState21","_useState22","activeAlbum","_useState23","_useState24","dataUrl","setDataUrl","_useState25","_useState26","modalIsOpen","setModalIsOpen","_useState27","_useState28","currentImagebase64","setcurrentImagebase64","useEffect","localStorage","getItem","JSON","parse","switchMovements","stateObj","handleMouseDown","rect","getBoundingClientRect","xOffset","clientX","left","yOffset","clientY","top","getStateObj","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","getBase64Image","img","canvas","setAttribute","width","height","getContext","drawImage","toDataURL","image","base_image","Image","crossOrigin","src","textStyle","fontFamily","fill","userSelect","zIndex","fontWeight","reactstrap_es","href","rel","MainPage_Form","xmlns","xmlnsXlink","viewBox","x","y","MainPage_svg","xlinkHref","preserveAspectRatio","objectSpread","fontSize","dominantBaseline","textAnchor","onMouseDown","onMouseUp","for","moveToBack","currentTarget","svgData","XMLSerializer","serializeToString","ctx","svgSize","svgDoc","DOMParser","parseFromString","then","resp","text","innerHTML","head","appendChild","styleSheet","sheet","fontRules","fontProms","_loop","fR","rule","getPropertyValue","cssText","match","split","replace","FontRule","cssRules","push","blob","Promise","resolve","f","FileReader","onload","result","readAsDataURL","dataURL","length","removeChild","all","svgNS","defs","createElementNS","join","documentElement","str","uri","encodeURIComponent","URL","revokeObjectURL","canvasdata","download","body","click","catch","reason","console","log","convertSvgToImage","index","key","cursor","alt","openImage","role","title","App","Components_MainPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8TAIMA,8LAKAC,KAAKC,MAAMC,MAAMF,MACjBA,KAAKC,MAAME,eAAe,KAC1BH,KAAKI,8GAOLJ,KAAKC,MAAMC,WAAMG,6CASjB,SAAeC,GAEbC,IAAa,YAAYC,UAAU,SAASC,SAE5C,IAAIC,EAAI,IAKJC,EAAMJ,IACa,YACVK,OAAO,MAAO,iBACdC,KAAK,QAAS,QACdC,OAAO,OACPD,KAAK,UALR,OAAAE,OAK0BL,EAL1B,KAAAK,OAK+BL,IAGrCM,EAAOT,MAEIU,MAAMV,KAGjBW,EAAMX,IAAiBY,MAAM,EAhBrB,EAAE,GAAI,KAqBdC,EAAMb,KAAU,EAAGG,GAAUW,IAAI,SAAAC,GAAC,MAAI,CAtB/B,IAsBgCA,EAAQJ,OAI/CK,EAAOH,EAAIC,IAAI,SAACG,EAAGF,GAAJ,MAAU,CACzBE,EAAE,GAAIA,EAAE,GAAKd,IAAQY,EAAEZ,EAAE,OAKzBe,EAAOL,EAAIM,UAAUL,IAAI,SAACG,EAAGF,GAAJ,MAAU,CACnCE,EAAE,GAAIA,EAAE,GAAKd,IAAQY,EAAEZ,EAAE,OAKzBiB,EAAIX,EAAKS,EAAKV,OAAOQ,IAIzBZ,EAAIG,OAAO,QACPD,KAAK,UAAW,IAChBA,KAAK,OAFT,OAAAE,OAEsC,IAAda,KAAKC,SAF7B,gBAGIhB,KAAK,IAHT,SAAAE,OAGuBL,EAHvB,MAAAK,OAG6BL,EAH7B,MAAAK,QAGoCL,EAHpC,OAAAK,OAG2CY,IApD7CG,oCAyDF,OACCC,EAAAC,EAAAC,cAAA,mBA/E0BC,IAAMC,WAwFtBC,wBAAYrC,UC1CZsC,cA9CX,SAAAA,EAAYpC,GAAO,IAAAqC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAqC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA3C,KAAMC,KACD2C,aAAeN,EAAKM,aAAaC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAKS,aAAeT,EAAKS,aAAaF,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHHA,2EAMPU,GACVhD,KAAKiD,KAAKC,SAASC,UAAY,GAC/BH,EAAMI,sDAIMJ,GAEZhD,KAAKqD,SAAS,CAACF,UAAWH,EAAMM,OAAOH,iDAG5BH,GACXO,MAAMvD,KAAKC,MAAMkD,WACjBH,EAAMI,kDAKN,OACArB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAAA,QAAMwB,SAAUzD,KAAKC,MAAMyD,UAAWC,UAAU,aAAaC,MAAO,CAAEC,aAAa,SACnF9B,EAAAC,EAAAC,cAAA,SAAO6B,QAAQ,eAAeH,UAAU,QAAxC,sBACA5B,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,oBAAoBI,KAAK,OAC1CZ,UAAWnD,KAAKC,MAAMkD,UACtBa,YAAahE,KAAKC,MAAMkD,UACxBc,SAAUjE,KAAK4C,aACfsB,QAASlE,KAAKmE,YAAYtB,KAAK7C,MAC/BoE,IAAI,WACJC,KAAK,YACLC,GAAG,0BArCMpC,IAAMC,WCmbVoC,MAhbf,SAAkBtE,GAAO,IAAAqC,EAAAtC,KAGjB0D,EAAS,eAAAc,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,EAAA1C,EAAA2C,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZN,EAAY,GACZD,IACFA,EAAEzB,iBACF0B,EAAYD,EAAEvB,OAAO+B,SAASP,UAAUQ,OAJ1BJ,EAAAE,KAAA,EAOEG,MAAK,wEAAAxE,OAAyE+D,GAAwB3B,GAAjG,mEAPP,cAOV4B,EAPUG,EAAAM,KAAAN,EAAAE,KAAA,EAQEL,EAAIU,OARN,OAQVT,EARUE,EAAAM,KAShBE,GAAeV,EAAIW,UAAUC,OATb,wBAAAV,EAAAW,SAAAjB,MAAH,gBAAAkB,GAAA,OAAAtB,EAAArD,MAAAnB,KAAA+F,YAAA,GAWTC,EAAWC,mBACXC,EAASD,mBACTE,EAAoBF,mBAhBHG,EAiBOC,mBAAS,SAjBhBC,EAAA/D,OAAAgE,EAAA,EAAAhE,CAAA6D,EAAA,GAiBhBI,EAjBgBF,EAAA,GAiBPG,EAjBOH,EAAA,GAAAI,EAkBaL,mBAAS,aAlBtBM,EAAApE,OAAAgE,EAAA,EAAAhE,CAAAmE,EAAA,GAkBhBE,EAlBgBD,EAAA,GAkBJE,EAlBIF,EAAA,GAAAG,EAmBmBT,oBAAS,GAnB5BU,EAAAxE,OAAAgE,EAAA,EAAAhE,CAAAuE,EAAA,GAmBhBE,EAnBgBD,EAAA,GAmBDE,EAnBCF,EAAA,GAAAG,EAoByBb,oBAAS,GApBlCc,EAAA5E,OAAAgE,EAAA,EAAAhE,CAAA2E,EAAA,GAoBhBE,EApBgBD,EAAA,GAoBEE,EApBFF,EAAA,GAAAG,EAqBCjB,mBAAS,OArBVkB,EAAAhF,OAAAgE,EAAA,EAAAhE,CAAA+E,EAAA,GAqBhBE,EArBgBD,EAAA,GAqBVE,EArBUF,EAAA,GAAAG,EAsBCrB,mBAAS,OAtBVsB,EAAApF,OAAAgE,EAAA,EAAAhE,CAAAmF,EAAA,GAsBhBE,EAtBgBD,EAAA,GAsBVE,EAtBUF,EAAA,GAAAG,EAuBOzB,mBAAS,OAvBhB0B,EAAAxF,OAAAgE,EAAA,EAAAhE,CAAAuF,EAAA,GAuBhBE,EAvBgBD,EAAA,GAuBPE,EAvBOF,EAAA,GAAAG,EAwBO7B,mBAAS,OAxBhB8B,EAAA5F,OAAAgE,EAAA,EAAAhE,CAAA2F,EAAA,GAwBhBE,EAxBgBD,EAAA,GAwBPE,EAxBOF,EAAA,GAAAG,EAyBmBjC,mBAAS,IAzB5BkC,EAAAhG,OAAAgE,EAAA,EAAAhE,CAAA+F,EAAA,GAyBhBE,EAzBgBD,EAAA,GAyBDE,EAzBCF,EAAA,GAAAG,EA0BiBrC,mBAAS,IA1B1BsC,EAAApG,OAAAgE,EAAA,EAAAhE,CAAAmG,EAAA,GA0BhBE,EA1BgBD,EAAA,GA0BFE,GA1BEF,EAAA,GAAAG,GA2BezC,mBAAS,IA3BxB0C,GAAAxG,OAAAgE,EAAA,EAAAhE,CAAAuG,GAAA,GA2BhBE,GA3BgBD,GAAA,GA2BHrD,GA3BGqD,GAAA,GAAAE,GA4BO5C,mBAAS,IA5BhB6C,GAAA3G,OAAAgE,EAAA,EAAAhE,CAAA0G,GAAA,GA4BhBE,GA5BgBD,GAAA,GA4BPE,GA5BOF,GAAA,GAAAG,GA6BehD,oBAAS,GA7BxBiD,GAAA/G,OAAAgE,EAAA,EAAAhE,CAAA8G,GAAA,GA6BhBE,GA7BgBD,GAAA,GA6BHE,GA7BGF,GAAA,GAAAG,GA8B6BpD,mBAAS,MA9BtCqD,GAAAnH,OAAAgE,EAAA,EAAAhE,CAAAkH,GAAA,GA8BhBE,GA9BgBD,GAAA,GA8BIE,GA9BJF,GAAA,GA+BjBvG,GAAY,QAElB0G,oBAAU,WACRnG,EAAU,MACV,IAAM+B,EAAOqE,aAAaC,QAAQ,eAC5Bf,EAAcgB,KAAKC,MAAMxE,GAC/BC,GAAesD,IACd,IAEHa,oBAAU,WACRD,GAAsBT,KACrB,CAACA,KAQJ,IAkBM/I,GAAiB,WACrBL,EAAiBK,kBAiDb8J,GAAkB,SAACC,GACvB,OAAQA,GACN,KAAK/C,EACHC,EAAoBD,GACpB,MACF,KAAKJ,EACHC,EAAiBD,GACjB,MACF,KAAKY,EACHC,EAAQD,GACR,MACF,KAAKJ,EACHC,EAAQD,GACR,MACF,KAAKQ,EACHC,EAAWD,GACX,MACF,KAAKI,EACHC,EAAWD,KAMXgC,GAAkB,SAACvF,EAAGd,GAC1B,IAAMoG,EAjDY,SAACtF,EAAGd,GACtB,IAAIsG,EAAOrE,EAASsE,wBACdC,EAAU1F,EAAE2F,QAAUH,EAAKI,KAAO,GAClCC,EAAU7F,EAAE8F,QAAUN,EAAKO,IAAM,GACnCT,EAAW,GAgBf,MAfa,WAATpG,EACFoG,EAAW,CACT/C,kBAAkB,EAClBJ,eAAe,EACfgB,QAAO,GAAAjH,OAAKwJ,EAAL,MACPnC,QAAO,GAAArH,OAAK2J,EAAL,OAES,QAAT3G,IACToG,EAAW,CACTnD,eAAe,EACfI,kBAAkB,EAClBQ,KAAI,GAAA7G,OAAKwJ,EAAL,MACJ/C,KAAI,GAAAzG,OAAK2J,EAAL,QAGDP,EA6BUU,CAAYhG,EAAGd,GAChC+G,SAASC,iBAAiB,YAAa,SAAC/H,GAAD,OAAWgI,GAAgBhI,EAAOe,KACzEmG,GAAgBC,IAIZa,GAAkB,SAACnG,EAAGd,GAC1B,GAAIiD,GAAiBI,EAAkB,CACrC,IAAI+C,EAAW,GACF,WAATpG,GAAqBqD,EACvB+C,EAAW7H,EAAKuI,YAAYhG,EAAGd,GACb,QAATA,GAAkBiD,IAC3BmD,EAAW7H,EAAKuI,YAAYhG,EAAGd,IAEjCmG,GAAgBC,KAIdc,GAAgB,SAACjI,GACrB8H,SAASI,oBAAoB,YAAaF,IAC1C/D,GAAiB,GACjBI,GAAoB,IAiGhB8D,GAAiB,SAACC,GACtB,IAAIC,EAASP,SAAS7I,cAAc,UAQpC,OAPAoJ,EAAOC,aAAa,cAAe,aACnCF,EAAIE,aAAa,cAAe,aAChCD,EAAOE,MAAQH,EAAIG,MACnBF,EAAOG,OAASJ,EAAII,OACVH,EAAOI,WAAW,MACxBC,UAAUN,EAAK,EAAG,GACRC,EAAOM,UAAU,eAK3BC,GAAQ5C,GACR6C,GAAa,IAAIC,MACvBD,GAAWE,YAAc,YACzBF,GAAWG,IAAMJ,GACjBC,GAAWP,aAAa,cAAe,aACvC,IAGIW,GAAY,CACdC,WAAY,YACZC,KAAM,OACNC,WAAY,OACZC,OAAQ,WACRC,WAAY,KAId,OACEvK,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAM0B,UAAU,gBACd5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,8BACb5B,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAaC,KAAK,KAAlB,YACAzK,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,uBAAb,sDAIA5B,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,uBACX5B,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,SAASL,OAAO,SAASmJ,IAAI,sBAAsBD,KAAM,uBAAtE,yBAEFzK,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,2BACb5B,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,eAAe8I,IAAI,sBAAsBnJ,OAAO,SAASkJ,KAAM,eAA5E,cADb,mBAOJzK,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,gCACb5B,EAAAC,EAAAC,cAACyK,EAAD,CACEhJ,UAAWA,EAAUb,KAAK7C,MAC1BmD,UAAWA,KAGbpB,EAAAC,EAAAC,cAAA,MAAI0B,UAAU,QAAd,2BAIA5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,aACb5B,EAAAC,EAAAC,cAAA,OACEsJ,MA7CC,OA8CDjH,GAAG,UACHF,IAAK8B,EACLyG,MAAM,6BACNC,WAAW,+BACXjJ,UAAU,gBACVkJ,QAAQ,eAGR9K,EAAAC,EAAAC,cAAA,iBAAe6K,EAAG,EAAGC,EAAG,EAAGxB,MAtD1B,OAsD2CC,OArD1C,QAsDAzJ,EAAAC,EAAAC,cAAC+K,EAAD,CAAkB9M,MAAO,kBAAMiG,MAGjCpE,EAAAC,EAAAC,cAAA,SACE8J,YAAY,YACZ3H,IAAK4B,EACLiH,UAAWtD,GACX6B,OA7DA,OA8DAD,MA/DD,OAgEC2B,oBAAoB,iBACpBvJ,UAAU,kBAGZ5B,EAAAC,EAAAC,cAAA,QACE2B,MAAKrB,OAAA4K,EAAA,EAAA5K,CAAA,GAAO0J,GAAP,CAAkBI,OAAQrF,EAAgB,EAAI,EAAGoG,SAAU5E,EAAgB,OAChFsE,EAAGlF,EACHmF,EAAGvF,EACH6F,iBAAiB,SACjBC,WAAW,SACXC,YAAa,SAAAvK,GAAK,OAAIoH,GAAgBpH,EAAO,QAC7CwK,UAAW,SAAAxK,GAAK,OAAIiI,OAGnBzE,GAEHzE,EAAAC,EAAAC,cAAA,QACE2B,MAAKrB,OAAA4K,EAAA,EAAA5K,CAAA,GAAO0J,GAAP,CAAkBmB,SAAUxE,EAAe,OAChDyE,iBAAiB,SACjBC,WAAW,SACXR,EAAG9E,EACH+E,EAAG3E,EACHmF,YAAa,SAAAvK,GAAK,OAAIoH,GAAgBpH,EAAO,WAC7CwK,UAAW,SAAAxK,GAAK,OAAIiI,OAGnBrE,IAIL7E,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,qBACb5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,WACb5B,EAAAC,EAAAC,cAACsK,EAAA,EAAD,KACExK,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAO5I,UAAU,UAAU8J,IAAI,WAA/B,sBACA1L,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QAlUxC,SAACW,GACtB4D,EAAmBD,EAAgB,KAiUnB,KACAzG,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,eAAeI,KAAK,OAAOM,KAAK,UAAUC,GAAG,UAAUJ,QAASjE,EAAMyN,WAAY1J,YAAY,cAAcC,SApSzH,SAACjB,GACpByD,EAAWzD,EAAM2K,cAAcrI,UAoShBvD,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QAzUxC,SAACW,GACtB4D,EAAkBD,EAAgB,KAwUlB,OAGJzG,EAAAC,EAAAC,cAACsK,EAAA,EAAD,KACExK,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAOkB,IAAI,cAAX,uBACA1L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QAlUpC,SAACW,GACzBgE,GAAiBD,EAAe,KAiUjB,KACA7G,EAAAC,EAAAC,cAAA,SAAO0B,UAAU,eAAeI,KAAK,OAAOM,KAAK,aAAaC,GAAG,aAAaJ,QAASjE,EAAMyN,WAAY1J,YAAY,aAAaC,SAxS3H,SAACjB,GACxB6D,EAAc7D,EAAM2K,cAAcrI,UAwSlBvD,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,2BAA2BO,QAxUpC,SAACW,GACzBgE,GAAiBD,EAAe,KAuUjB,OAKJ7G,EAAAC,EAAAC,cAAA,UAAQiC,QAAS,kBAhOL,WAExB,IAmDMvD,EAAMuF,EACR0H,GAAU,IAAIC,eAAgBC,kBAAkBnN,GAC9C0K,EAASP,SAAS7I,cAAc,UACtCoJ,EAAOC,aAAa,KAAM,UAC1B,IAAMyC,EAAM1C,EAAOI,WAAW,MACxBuC,EAAUrN,EAAI2J,wBACpBe,EAAOE,MAAQyC,EAAQzC,MACvBF,EAAOG,OAASwC,EAAQxC,OACxB,IA3DwBlL,EA2DlB8K,EAAMN,SAAS7I,cAAc,OAE/BgM,GAAS,IAAIC,WAAYC,gBAAgBP,EAAS,kBA7D9BtN,EA8DT,sDA7DNiF,MAAMjF,GACV8N,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GACJ,IAAI5N,EAAIoK,SAAS7I,cAAc,SAC/BvB,EAAE6N,UAAYD,EACdxD,SAAS0D,KAAKC,YAAY/N,GAgB1B,IAfA,IAAIgO,EAAahO,EAAEiO,MAYfC,EAAY,GACdC,EAAY,GAjBFC,EAAA,SAmBHxN,GACP,IACIyN,EAfS,SAAAC,GACb,IAAIhD,EAAMgD,EAAKpL,MAAMqL,iBAAiB,QAAUD,EAAKpL,MAAMsL,QAAQC,MAAM,eAAe,GACxF,IAAKnD,EAAK,OAAO,KACjB,IAAI1L,EAAM0L,EAAIoD,MAAM,QAAQ,GAAGA,MAAM,KAAK,GAC1C,MAAO,CACLJ,KAAMA,EACNhD,IAAKA,EACL1L,IAAKA,EAAI+O,QAAQ,KAAM,KAQhBC,CADDZ,EAAWa,SAASjO,IAE5B,IAAKyN,EACH,iBAEFH,EAAUY,KAAKT,GACfF,EAAUW,KACRjK,MAAMwJ,EAAGzO,KACN8N,KAAK,SAAAC,GAAI,OAAIA,EAAKoB,SAClBrB,KAAK,SAAAqB,GACJ,OAAO,IAAIC,QAAQ,SAAAC,GAEjB,IAAIC,EAAI,IAAIC,WACZD,EAAEE,OAAS,SAAAjL,GAAC,OAAI8K,EAAQC,EAAEG,SAC1BH,EAAEI,cAAcP,OAGnBrB,KAAK,SAAA6B,GAEJ,OAAOlB,EAAGC,KAAKE,QAAQG,QAAQN,EAAGzO,IAAK2P,OApBtC3O,EAAI,EAAGA,EAAIoN,EAAWa,SAASW,OAAQ5O,IAAKwN,EAA5CxN,GAyBT,OADAwJ,SAAS0D,KAAK2B,YAAYzP,GACnBgP,QAAQU,IAAIvB,MAgBtBT,KAAK,SAAAmB,GACJ,IAAIc,EAAQ,6BACRC,EAAOrC,EAAOsC,gBAAgBF,EAAO,QACrCzM,EAAQqK,EAAOsC,gBAAgBF,EAAO,SAC1CzM,EAAM2K,UAAYgB,EAASiB,KAAK,MAChCF,EAAK7B,YAAY7K,GACjBqK,EAAOwC,gBAAgBhC,YAAY6B,GACnC,IAAII,GAAM,IAAI7C,eAAgBC,kBAAkBG,EAAOwC,iBACnDE,EAAM,mCAAqCC,mBAAmBF,GAElEtF,EAAI0E,OAAS,SAAUjL,GACrBgM,IAAIC,gBAAgB9Q,KAAKgM,KACzB+B,EAAIrC,UAAU1L,KAAM,EAAG,GACvBqL,EAAOI,WAAW,MAAMC,UAAUN,EAAK,EAAG,GAC1C,IAAM2F,EAAa1F,EAAOM,UAAU,cAC9B3J,EAAI8I,SAAS7I,cAAc,KACjCD,EAAEgP,SAAF,YACAhP,EAAEwK,KAAOuE,EACTjG,SAASmG,KAAKxC,YAAYzM,GAC1BA,EAAEkP,SAEJ9F,EAAIY,IAAM2E,EACVvF,EAAIE,aAAa,cAAe,eAGjC6F,MAAM,SAAAC,GAAM,OAAIC,QAAQC,IAAIF,KAsIIG,IAAqB5N,UAAU,8BAAtD,4BAMN5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,WACZqF,IAAeA,GAAY3H,IAAI,SAACuK,EAAO4F,GAAR,OAC9BzP,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,eAAeO,QAAS,kBAAM9D,IAAgBqR,IAAG,GAAA1Q,OAAKyQ,IAE3C,IAAvBxI,GAAYkH,QACXnO,EAAAC,EAAAC,cAAA,OACE2B,MAAO,CACL2H,MAAO,OACPmG,OAAQ,UACRlG,OAAQ,QAEVO,YAAY,YACZ4F,IAAK/F,EAAMvH,KACX2H,IAAKJ,EAAMA,MAAM,GAAG,SACpBjI,UAAU,qBACVO,QAAS,kBArVT,SAACsN,GACjB,IAAM5F,EAAQ5C,GAAYwI,GACpB3F,EAAa,IAAIC,MACvBD,EAAWP,aAAa,cAAe,aACvCO,EAAWG,IAAMJ,EAAMA,MAAM,GAAG,SAEhCC,EAAWiE,OAAS,WACjB1G,GAAW+B,GAAeU,KAE7BrC,IAAgBD,IA4UeqI,CAAUJ,IACzBK,KAAK,eACLJ,IAAKD,EACLM,MAAOlG,EAAMvH,eCrZlB0N,gMARX,OACEhQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACEzB,EAAAC,EAAAC,cAAC+P,EAAD,cAJU7P,cCME8P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DCZNkD,IAASC,OAAOvQ,EAAAC,EAAAC,cAACsQ,EAAD,MAASzH,SAAS0H,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.9f637850.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport {withFauxDOM} from 'react-faux-dom';\n\nclass MyReactComponent extends React.Component {\n\n  \n\n    componentDidMount() {\n      this.props.onRef(this)\n      this.props.animateFauxDOM(800)\n      this.createBarChart()\n    }\n\n    componentDidUpdate() {\n    }\n\n    componentWillUnmount() {\n      this.props.onRef(undefined)\n    }\n\n\n\n    createBarChart(){\n\n      curvy()\n  \n      function curvy(url) {\n\n        d3.selectAll(\"#svg_ref\").selectAll(\".land\").remove();\n\n        let s = 500;            // size\n        let step = 100;         // x-axis step\n        let range = [-50, 50];  // y-axis range\n          \n        // add new svg to document.body with origin at 0  \n        let svg = d3\n                    .selectAll('#svg_ref')\n                    .insert('svg', '.coverfit + *')\n                    .attr(\"class\", \"land\")\n                    .append('svg')\n                    .attr('viewBox', `0 0 ${s} ${s}`);\n      \n        // interpolation algorithm for points used to form masking shape\n        let line = d3\n                      .line()\n                      .curve(d3.curveCardinalClosed);\n      \n        // random values generator function\n        let rnd = d3.randomUniform.apply(0, range);\n\n        // here i place points with fixed `step` by `x` axis  \n        // and random value in `range` by `y` axis\n        // which forms the \"original path\"\n        let pts = d3.range(-1, s/step+2).map(i => [i*step, rnd()]);\n      \n        // shift points down from \"original path\", \n        // amount of shift depends from point index \n        let pts1 = pts.map((p, i) => [\n            p[0], p[1] + s*0.3 - i*s*0.08\n        ]);\n        \n        // reverse order of original and shift points down on \n        // bigger values, depending from point index\n        let pts2 = pts.reverse().map((p, i) => [\n            p[0], p[1] + s*0.8 - i*s*0.03\n        ]);\n      \n        // forming single interpolated path for all \n        // points from prev steps concatenated in single array\n        let d = line(pts2.concat(pts1));\n        \n        // append rect sized as viewport with hole formed by interpolated path\n        // with random color from hsl palette and opacity 0.9\n        svg.append('path')\n           .attr('opacity', 0.9)\n           .attr('fill', `hsl(${Math.random()*255}, 50%, 65%)`)\n           .attr('d', `M0,0 v${s} h${s} v${-s} z ${d}`)\n      }\n    }\n\n  render () {\n    return (\n     <div></div>\n    )\n  }\n}\n\n// MyReactComponent.defaultProps = {\n//   chart: 'loading'\n// }\n\nexport default withFauxDOM(MyReactComponent)","import React from 'react';\n\nclass Form extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n      this.refs.someName.formValue = '';\n      event.preventDefault();\n    }\n\n\n     handleChange(event) {\n      \n      this.setState({formValue: event.target.formValue});\n    }\n\n    handleSubmit(event) {\n      alert(this.props.formValue);\n      event.preventDefault();\n    }\n\n\n    render() {\n      return (\n      <>\n          <form onSubmit={this.props.getAlbums} className=\"fixed-form\" style={{ marginBottom:\"2rem\" }}>\n          <label htmlFor=\"artistsearch\" className=\"ml-2\">Search your Artist</label>\n          <input className=\"form__input w-100\" type=\"text\"  \n          formValue={this.props.formValue}  \n          placeholder={this.props.formValue}\n          onChange={this.handleChange} \n          onClick={this.handleInput.bind(this)} \n          ref=\"someName\"\n          name=\"albumName\"\n          id=\"artistsearch\"\n          />\n\n        </form>\n      </>\n    );\n  }\n\n}\n\n\nexport default Form;","import React, {useEffect, useState, useRef} from 'react';\nimport { FormGroup, Label, NavbarBrand } from 'reactstrap';\nimport MyReactComponent from './svg';\nimport Form from './Form';\n\nfunction MainPage(props) {\n\n\n  const getAlbums = async (e) => {\n    let albumName = \"\";\n    if (e) {\n      e.preventDefault();\n      albumName = e.target.elements.albumName.value\n    }\n\n    const req = await fetch(`https://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=${albumName ? albumName : formValue}&api_key=afcfad19fac36b2d66cf2f17e37f66ed&format=json&limit=10`);\n    const res = await req.json();\n    setActiveAlbum(res.topalbums.album);\n  }\n  const imageRef = useRef();\n  const svgRef = useRef();\n  const MyReactComponent2 = useRef();\n  const [toptext, setTopText] = useState(\"Queen\");\n  const [bottomtext, setBottomText] = useState(\"Best Hits\");\n  const [isTopDragging, setIsTopDragging] = useState(false);\n  const [isBottomDragging, setIsBottomDragging] = useState(false);\n  const [topY, setTopY] = useState(\"80%\");\n  const [topX, setTopX] = useState(\"50%\");\n  const [bottomX, setBottomX] = useState(\"50%\");\n  const [bottomY, setBottomY] = useState(\"90%\");\n  const [fontSizefront, setFontSizefront] = useState(38);\n  const [fontSizeback, setFontSizeback] = useState(38);\n  const [activeAlbum, setActiveAlbum] = useState([]);\n  const [dataUrl, setDataUrl] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentImagebase64, setcurrentImagebase64] = useState(null);\n  const formValue = \"Queen\";\n\n  useEffect(() => {\n    getAlbums(null);\n    const json = localStorage.getItem(\"activeAlbum\");\n    const activeAlbum = JSON.parse(json);\n    setActiveAlbum(activeAlbum)\n  }, []);\n\n  useEffect(() => {\n    setcurrentImagebase64(dataUrl);\n  }, [dataUrl]);\n\n  // useEffect(() => {\n  //   const activeAlbum = JSON.stringify(activeAlbum);\n  //   localStorage.setItem(\"activeAlbum\", activeAlbum);\n  // }, [activeAlbum]);\n\n\n  const incrementScore = (e) => {\n    setFontSizefront( fontSizefront + 2 );\n\n  }\n\n  const decrementScore = (e) => {\n    setFontSizefront(  fontSizefront - 2 );\n  }\n\n  const incrementScoreback = (e) => {\n     setFontSizeback( fontSizeback + 2 );\n  }\n\n  const decrementScoreback = (e) => {\n     setFontSizeback( fontSizeback - 2 );\n  }\n\n\n  const createBarChart = () => {\n    MyReactComponent.createBarChart();\n  }\n\n  const openImage = (index) => {\n    const image = activeAlbum[index];\n    const base_image = new Image();\n    base_image.setAttribute('crossOrigin', 'anonymous');\n    base_image.src = image.image[3]['#text'];\n    \n    base_image.onload = function() {\n       setDataUrl(getBase64Image(base_image));\n    }\n    setModalIsOpen(!modalIsOpen);\n    \n  }\n\n\n  const changeTopText = (event) => {\n     setTopText(event.currentTarget.value);\n  }\n\n  const changeBottomText = (event) => {\n    setBottomText(event.currentTarget.value);\n  }\n\n  const getStateObj = (e, type) => {\n    let rect = imageRef.getBoundingClientRect();\n    const xOffset = e.clientX - rect.left + 20;\n    const yOffset = e.clientY - rect.top + 40;\n    let stateObj = {};\n    if (type === \"bottom\") {\n      stateObj = {\n        isBottomDragging: true,\n        isTopDragging: false,\n        bottomX: `${xOffset}px`,\n        bottomY: `${yOffset}px`\n      }\n    } else if (type === \"top\") {\n      stateObj = {\n        isTopDragging: true,\n        isBottomDragging: false,\n        topX: `${xOffset}px`,\n        topY: `${yOffset}px`\n      }\n    }\n    return stateObj;\n  }\n\n\n  const switchMovements = (stateObj) => {\n    switch (stateObj) {\n      case isBottomDragging:\n        setIsBottomDragging(isBottomDragging)\n        break;\n      case isTopDragging:\n        setIsTopDragging(isTopDragging)\n        break;\n      case topX:\n        setTopX(topX)\n        break;\n      case topY:\n        setTopY(topY)\n        break;\n      case bottomX:\n        setBottomX(bottomX)\n        break;\n      case bottomY:\n        setBottomY(bottomY)\n        break;\n      default:\n        break;\n    }\n  }\n  const handleMouseDown = (e, type) => {\n    const stateObj = getStateObj(e, type);\n    document.addEventListener('mousemove', (event) => handleMouseMove(event, type));\n    switchMovements(stateObj)\n\n  }\n\n  const handleMouseMove = (e, type) => {\n    if (isTopDragging || isBottomDragging) {\n      let stateObj = {};\n      if (type === \"bottom\" && isBottomDragging) {\n        stateObj = this.getStateObj(e, type);\n      } else if (type === \"top\" && isTopDragging) {\n        stateObj = this.getStateObj(e, type);\n      }\n      switchMovements(stateObj)\n    }\n  };\n\n  const handleMouseUp = (event) => {\n    document.removeEventListener('mousemove', handleMouseMove);\n    setIsTopDragging(false);\n    setIsBottomDragging(false);\n  }\n\n\n  const convertSvgToImage = () => {\n\n    const GFontToDataURI = (url) => {\n      return fetch(url)\n        .then(resp => resp.text())\n        .then(text => {\n          let s = document.createElement('style');\n          s.innerHTML = text;\n          document.head.appendChild(s);\n          let styleSheet = s.sheet\n\n          let FontRule = rule => {\n            let src = rule.style.getPropertyValue('src') || rule.style.cssText.match(/url\\(.*?\\)/g)[0];\n            if (!src) return null;\n            let url = src.split('url(')[1].split(')')[0];\n            return {\n              rule: rule,\n              src: src,\n              url: url.replace(/\"/g, '')\n            };\n          };\n          let fontRules = [],\n            fontProms = [];\n\n          for (let i = 0; i < styleSheet.cssRules.length; i++) {\n            let r = styleSheet.cssRules[i];\n            let fR = FontRule(r);\n            if (!fR) {\n              continue;\n            }\n            fontRules.push(fR);\n            fontProms.push(\n              fetch(fR.url) // fetch the actual font-file (.woff)\n                .then(resp => resp.blob())\n                .then(blob => {\n                  return new Promise(resolve => {\n\n                    let f = new FileReader();\n                    f.onload = e => resolve(f.result);\n                    f.readAsDataURL(blob);\n                  })\n                })\n                .then(dataURL => {\n\n                  return fR.rule.cssText.replace(fR.url, dataURL);\n                })\n            )\n          }\n          document.head.removeChild(s); // clean up\n          return Promise.all(fontProms); // wait for all this has been done\n        });\n    }\n\n    const svg = svgRef;\n    let svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"id\", \"canvas\");\n    const ctx = canvas.getContext('2d');\n    const svgSize = svg.getBoundingClientRect();\n    canvas.width = svgSize.width;\n    canvas.height = svgSize.height;\n    const img = document.createElement(\"img\");\n\n    let svgDoc = new DOMParser().parseFromString(svgData, 'image/svg+xml');\n    GFontToDataURI('https://fonts.googleapis.com/css?family=Poppins:600')\n      .then(cssRules => { // we've got our array with all the cssRules\n        let svgNS = \"http://www.w3.org/2000/svg\";\n        let defs = svgDoc.createElementNS(svgNS, 'defs');\n        let style = svgDoc.createElementNS(svgNS, 'style');\n        style.innerHTML = cssRules.join('\\n');\n        defs.appendChild(style);\n        svgDoc.documentElement.appendChild(defs);\n        let str = new XMLSerializer().serializeToString(svgDoc.documentElement);\n        let uri = 'data:image/svg+xml;charset=utf8,' + encodeURIComponent(str);\n\n        img.onload = function (e) {\n          URL.revokeObjectURL(this.src);\n          ctx.drawImage(this, 0, 0);\n          canvas.getContext(\"2d\").drawImage(img, 0, 0);\n          const canvasdata = canvas.toDataURL(\"image/jpeg\");\n          const a = document.createElement(\"a\");\n          a.download = `album.jpg`;\n          a.href = canvasdata;\n          document.body.appendChild(a);\n          a.click();\n        }\n        img.src = uri;\n        img.setAttribute('crossOrigin', 'anonymous');\n\n      })\n      .catch(reason => console.log(reason))\n  }\n\n  const getBase64Image = (img) => {\n    var canvas = document.createElement(\"canvas\");\n    canvas.setAttribute('crossOrigin', 'anonymous');\n    img.setAttribute('crossOrigin', 'anonymous');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    var dataURL = canvas.toDataURL(\"image/jpeg\");\n    return dataURL;\n  }\n\n\n  const image = activeAlbum;\n  const base_image = new Image();\n  base_image.crossOrigin = \"anonymous\";  // This enables CORS\n  base_image.src = image;\n  base_image.setAttribute('crossOrigin', 'anonymous');\n  var newWidth = \"100%\";\n  var newHeight = \"100%\";\n\n  let textStyle = {\n    fontFamily: \"'Poppins'\",\n    fill: \"#FFF\",\n    userSelect: \"none\",\n    zIndex: '40000000',\n    fontWeight: 600\n  }\n\n\n  return (\n    <React.Fragment>\n      <div>\n        <div  className=\"main-content\">\n          <div className=\"sidebar d-flex flex-column\">\n            <NavbarBrand href=\"/\">Albumify</NavbarBrand>\n            <p className=\"text-center d-block\">\n              This is a fun project inspired by ReplaceCover.com\n            </p>\n\n            <p className=\"text-center d-block\">\n              <a className=\" mt-0 \" target=\"_blank\" rel=\"noopener noreferrer\" href={'mailto:hi@santih.me'} > Contact the creator</a>\n            </p>\n            <div className=\"row mt-auto text-center\">\n              <p>\n                Created by <a className=\" mt-0 white \" rel=\"noopener noreferrer\" target=\"_blank\" href={'//santih.me'} >santih.me </a> MIT Licensed\n              </p>\n            </div>\n\n          </div>\n\n          <div className=\"meme-gen-modal mx-auto w-100\" >\n            <Form\n              getAlbums={getAlbums.bind(this)}\n              formValue={formValue}\n            />\n\n            <h2 className=\"my-4\">\n              Choose an Album and Go!\n            </h2>\n\n            <div className=\"pedidosya\">\n              <svg\n                width={newWidth}\n                id=\"svg_ref\"\n                ref={svgRef}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                className=\"svg_container\"\n                viewBox=\"0 0 500 500\"\n              >\n\n                <foreignObject x={0} y={0} width={newWidth} height={newHeight} >\n                  <MyReactComponent onRef={() => MyReactComponent2} />\n                </foreignObject>\n\n                <image\n                  crossOrigin=\"anonymous\"\n                  ref={imageRef}\n                  xlinkHref={currentImagebase64}\n                  height={newHeight}\n                  width={newWidth}\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  className=\"svg2 coverfit\"\n                />\n\n                <text\n                  style={{ ...textStyle, zIndex: isTopDragging ? 4 : 1, fontSize: fontSizefront + 'px' }}\n                  x={topX}\n                  y={topY}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  onMouseDown={event => handleMouseDown(event, 'top')}\n                  onMouseUp={event => handleMouseUp(event, 'top')}\n\n                >\n                  {toptext}\n                </text>\n                <text\n                  style={{ ...textStyle, fontSize: fontSizeback + 'px' }}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  x={bottomX}\n                  y={bottomY}\n                  onMouseDown={event => handleMouseDown(event, 'bottom')}\n                  onMouseUp={event => handleMouseUp(event, 'bottom')}\n\n                >\n                  {bottomtext}\n                </text>\n\n              </svg>\n              <div className=\"meme-form mx-auto\">\n                <div className=\"d-block\">\n                  <FormGroup>\n                    <Label className=\"d-block\" for=\"toptext\">First line of Text</Label>\n                    <button className=\"counter-action decrement\" onClick={decrementScore}>-</button>\n                    <input className=\"form-control\" type=\"text\" name=\"toptext\" id=\"toptext\" onClick={props.moveToBack} placeholder=\"Artist name\" onChange={changeTopText} />\n                    <button className=\"counter-action increment\" onClick={incrementScore}>+</button>\n                  </FormGroup>\n                </div>\n                <FormGroup>\n                  <Label for=\"bottomtext\">Second line of Text</Label>\n                  <div>\n                    <button className=\"counter-action decrement\" onClick={decrementScoreback}>-</button>\n                    <input className=\"form-control\" type=\"text\" name=\"bottomtext\" id=\"bottomtext\" onClick={props.moveToBack} placeholder=\"Album name\" onChange={changeBottomText} />\n                    <button className=\"counter-action increment\" onClick={incrementScoreback}>+</button>\n                  </div>\n\n\n                </FormGroup>\n                <button onClick={() => convertSvgToImage()} className=\"btn btn-success mt-3 w-100\">Download Album Cover!</button>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"content\">\n            {activeAlbum && activeAlbum.map((image, index) => (\n              <div className=\"image-holder\" onClick={() => createBarChart} key={`${index}`}\n              >\n                {activeAlbum.length !== 0 &&\n                  <img\n                    style={{\n                      width: \"100%\",\n                      cursor: \"pointer\",\n                      height: \"100%\"\n                    }}\n                    crossOrigin=\"anonymous\"\n                    alt={image.name}\n                    src={image.image[3]['#text']}\n                    className=\"w-100 first-second\"\n                    onClick={() => openImage(index)}\n                    role=\"presentation\"\n                    key={index}\n                    title={image.name}\n                  />\n                }\n\n              </div>\n            ))}\n          </div>\n        </div>\n\n      </div>\n    </React.Fragment>\n\n  )\n\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport MainPage from './Components/MainPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <MainPage />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}